import logging
import asyncio
from telegram.ext import (
    Application, 
    CommandHandler, 
    MessageHandler, 
    CallbackQueryHandler,
    ConversationHandler,
    filters
)
from config import config, States
from handlers.start import start_command, help_command, menu_handler, contacts_command, handle_unknown_message
from handlers.plot import (
    show_plot_detail, 
    start_booking_process,
    handle_plots_pagination,
    refresh_plots,
    back_to_catalog
)
from handlers.booking import (
    show_booking_detail,
    start_cancel_booking,
    handle_bookings_pagination, 
    refresh_bookings,
    back_to_bookings,
    confirm_cancel_booking
)
from handlers.booking_process import handle_contact, cancel_booking_process
from handlers.support import support_command, faq_command, send_feedback
from handlers.error_handler import global_error_handler
from api_client import api_client

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –º–æ—Å–∫–æ–≤—Å–∫–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –∑–µ–º–µ–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–∫–æ–≤...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not config.BOT_TOKEN:
        logger.error("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    logger.info("‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        application = Application.builder().token(config.BOT_TOKEN).build()
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        setup_handlers(application)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        application.add_error_handler(global_error_handler)
        
        logger.info("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")
        logger.info("üì° –ó–∞–ø—É—Å–∫ polling –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
        logger.info(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API: {config.API_BASE_URL}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        application.run_polling(
            poll_interval=1.0,
            timeout=30,
            drop_pending_updates=True
        )
        
    except KeyboardInterrupt:
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (Ctrl+C)")
    except Exception as e:
        logger.critical(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
    finally:
        logger.info("üëã –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")

def setup_handlers(application):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∫–æ–º–∞–Ω–¥"""
    
    # 1. –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("contacts", contacts_command))
    application.add_handler(CommandHandler("support", support_command))
    application.add_handler(CommandHandler("faq", faq_command))
    application.add_handler(CommandHandler("feedback", send_feedback))
    
    # 2. CONVERSATION HANDLER –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    booking_conversation_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(start_booking_process, pattern="^book_")],
        states={
            States.WAITING_CONTACT: [
                MessageHandler(filters.CONTACT, handle_contact),
                MessageHandler(filters.TEXT & ~filters.COMMAND, cancel_booking_process)
            ]
        },
        fallbacks=[
            CommandHandler("cancel", cancel_booking_process),
            MessageHandler(filters.Text(["‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞", "‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]), cancel_booking_process)
        ],
        name="booking_conversation",
        persistent=False,
        allow_reentry=True,
        per_message=False
    )
    application.add_handler(booking_conversation_handler)
    
    # 3. –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò CALLBACK QUERY –¥–ª—è —É—á–∞—Å—Ç–∫–æ–≤
    application.add_handler(CallbackQueryHandler(show_plot_detail, pattern="^plot_"))
    application.add_handler(CallbackQueryHandler(handle_plots_pagination, pattern="^plots_page_"))
    application.add_handler(CallbackQueryHandler(refresh_plots, pattern="^refresh_plots$"))
    application.add_handler(CallbackQueryHandler(back_to_catalog, pattern="^back_to_catalog$"))
    
    # 4. –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò CALLBACK QUERY –¥–ª—è –±—Ä–æ–Ω–µ–π
    application.add_handler(CallbackQueryHandler(show_booking_detail, pattern="^booking_"))
    application.add_handler(CallbackQueryHandler(confirm_cancel_booking, pattern="^confirm_yes$"))
    application.add_handler(CallbackQueryHandler(back_to_bookings, pattern="^back_to_bookings$"))
    application.add_handler(CallbackQueryHandler(handle_bookings_pagination, pattern="^bookings_page_"))
    application.add_handler(CallbackQueryHandler(refresh_bookings, pattern="^refresh_bookings$"))
    
    # 5. –û—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏ (–æ—Ç–¥–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫)
    application.add_handler(CallbackQueryHandler(start_cancel_booking, pattern="^cancel_booking_"))
    
    # 6. –û—Ç–º–µ–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    application.add_handler(CallbackQueryHandler(back_to_bookings, pattern="^confirm_no$"))
    
    # 7. –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –¢–ï–ö–°–¢–û–í–´–• –°–û–û–ë–©–ï–ù–ò–ô (–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)
    application.add_handler(MessageHandler(
        filters.Text([
            "üèû –ö–∞—Ç–∞–ª–æ–≥ —É—á–∞—Å—Ç–∫–æ–≤", 
            "üìã –ú–æ–∏ –±—Ä–æ–Ω–∏",
            "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", 
            "üÜò –ü–æ–º–æ—â—å",
            "‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        ]),
        menu_handler
    ))
    
    # 8. –û–ë–†–ê–ë–û–¢–ß–ò–ö –ù–ï–ò–ó–í–ï–°–¢–ù–´–• –°–û–û–ë–©–ï–ù–ò–ô
    application.add_handler(MessageHandler(filters.ALL, handle_unknown_message))
    
    logger.info("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

if __name__ == "__main__":
    main()
