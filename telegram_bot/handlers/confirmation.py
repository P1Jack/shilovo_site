from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
import logging
from config import config
from models.booking import Booking
from services.booking_service import booking_service
from services.notification import notification_service
from keyboards import (
    get_booking_actions_keyboard, 
    get_bookings_list_keyboard,
    get_back_to_menu_keyboard
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

async def show_pending_bookings(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–µ–π –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä—É—é –≤–∏–¥—è—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—ã
    """
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
    await update.message.reply_text(
        "üîÑ –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–µ–π...",
        reply_markup=get_back_to_menu_keyboard()
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –±—Ä–æ–Ω–∏ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
    bookings = await booking_service.get_pending_bookings()
    
    if not bookings:
        # –ï—Å–ª–∏ –Ω–µ—Ç –±—Ä–æ–Ω–µ–π - —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
        await update.message.reply_text(
            "‚úÖ –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –±—Ä–æ–Ω–µ–π, –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.",
            reply_markup=get_back_to_menu_keyboard()
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –±—Ä–æ–Ω–∏ –∏ —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    context.user_data['current_bookings'] = bookings
    context.user_data['current_page'] = 0
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    message_text = f"üìã <b>–ë—Ä–æ–Ω–∏ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</b>\n\n–ù–∞–π–¥–µ–Ω–æ –±—Ä–æ–Ω–µ–π: {len(bookings)}"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –±—Ä–æ–Ω–µ–π
    await update.message.reply_text(
        message_text,
        reply_markup=get_bookings_list_keyboard(bookings, 0),
        parse_mode='HTML'
    )

async def show_booking_detail(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±—Ä–æ–Ω–∏
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –±—Ä–æ–Ω—å –≤ —Å–ø–∏—Å–∫–µ
    """
    query = update.callback_query
    await query.answer()  # –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ callback —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" –≤ –∫–Ω–æ–ø–∫–µ
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –±—Ä–æ–Ω–∏ –∏–∑ callback_data (—Ñ–æ—Ä–º–∞—Ç: "booking_123")
    booking_id = int(query.data.split('_')[1])
    
    # –ü–æ–ª—É—á–∞–µ–º –±—Ä–æ–Ω–∏ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (–∏–∑ —Ä–∞–Ω–µ–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞)
    bookings = context.user_data.get('current_bookings', [])
    
    # –ò—â–µ–º –Ω—É–∂–Ω—É—é –±—Ä–æ–Ω—å –≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ
    booking = next((b for b in bookings if b.id == booking_id), None)
    
    if not booking:
        # –ï—Å–ª–∏ –±—Ä–æ–Ω—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–µ—à–µ - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–∑ API
        booking = await booking_service.api_client.get_booking_by_id(booking_id)
    
    if not booking:
        # –ï—Å–ª–∏ –±—Ä–æ–Ω—å –≤–æ–æ–±—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
        await query.edit_message_text("‚ùå –ë—Ä–æ–Ω—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞")
        return
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—Ä–æ–Ω–∏
    detailed_info = f"üìã <b>–î–µ—Ç–∞–ª–∏ –±—Ä–æ–Ω–∏ #{booking.id}</b>\n{booking.formatted_info}"
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Å–æ —Å–ø–∏—Å–∫–æ–º) —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏
    await query.edit_message_text(
        detailed_info,
        reply_markup=get_booking_actions_keyboard(booking.id),
        parse_mode='HTML'
    )

async def confirm_booking(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –º–µ–Ω–µ–¥–∂–µ—Ä –Ω–∞–∂–∏–º–∞–µ—Ç "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    """
    query = update.callback_query
    await query.answer()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –±—Ä–æ–Ω–∏
    booking_id = int(query.data.split('_')[1])
    user = query.from_user
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—Ä–æ–Ω–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    booking = await booking_service.api_client.get_booking_by_id(booking_id)
    
    if not booking:
        await query.edit_message_text("‚ùå –ë—Ä–æ–Ω—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º –∫—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª
    confirmed_by = f"@{user.username}" if user.username else user.first_name
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –±—Ä–æ–Ω—å —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
    success = await booking_service.confirm_booking(booking_id, confirmed_by)
    
    if success:
        # –ï—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
        await notification_service.notify_booking_confirmed(booking, confirmed_by)
        
        success_text = f"‚úÖ –ë—Ä–æ–Ω—å #{booking_id} —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!"
    else:
        success_text = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await query.edit_message_text(success_text)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–µ–π
    await show_pending_bookings_from_query(query, context)

async def start_reject_booking(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –±—Ä–æ–Ω–∏
    –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –±–æ—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
    """
    query = update.callback_query
    await query.answer()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –±—Ä–æ–Ω–∏
    booking_id = int(query.data.split('_')[1])
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –±—Ä–æ–Ω–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –≠—Ç–æ –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –≤ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ –∑–Ω–∞—Ç—å –∫–∞–∫—É—é –±—Ä–æ–Ω—å –æ—Ç–∫–ª–æ–Ω—è–µ–º
    context.user_data['rejecting_booking_id'] = booking_id
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
    rejection_prompt = """
üìù <b>–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –±—Ä–æ–Ω–∏:</b>

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–ª–∏–µ–Ω—Ç—É.
    """
    
    await query.edit_message_text(
        rejection_prompt,
        parse_mode='HTML'
    )
    
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –±–æ—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã
    return config.States.WAITING_REJECT_REASON

async def process_reject_reason(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∏ –æ—Ç–∫–ª–æ–Ω—è–µ—Ç –±—Ä–æ–Ω—å
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–∫—Å—Ç —Å –ø—Ä–∏—á–∏–Ω–æ–π
    """
    rejection_reason = update.message.text
    booking_id = context.user_data.get('rejecting_booking_id')
    user = update.effective_user
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å ID –±—Ä–æ–Ω–∏
    if not booking_id:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –±—Ä–æ–Ω—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return ConversationHandler.END
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—Ä–æ–Ω–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    booking = await booking_service.api_client.get_booking_by_id(booking_id)
    
    if not booking:
        await update.message.reply_text("‚ùå –ë—Ä–æ–Ω—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return ConversationHandler.END
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º –∫—Ç–æ –æ—Ç–∫–ª–æ–Ω–∏–ª
    rejected_by = f"@{user.username}" if user.username else user.first_name
    
    # –û—Ç–∫–ª–æ–Ω—è–µ–º –±—Ä–æ–Ω—å —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
    success = await booking_service.reject_booking(
        booking_id,
        rejection_reason,
        rejected_by
    )
    
    if success:
        # –ï—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
        await notification_service.notify_booking_rejected(booking, rejected_by, rejection_reason)
        
        result_text = f"‚ùå –ë—Ä–æ–Ω—å #{booking_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n<b>–ü—Ä–∏—á–∏–Ω–∞:</b> {rejection_reason}"
    else:
        result_text = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(result_text, parse_mode='HTML')
    
    # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    context.user_data.pop('rejecting_booking_id', None)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–µ–π
    await show_pending_bookings(update, context)
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º Conversation
    return ConversationHandler.END

async def handle_pagination(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –≤ —Å–ø–∏—Å–∫–µ –±—Ä–æ–Ω–µ–π
    """
    query = update.callback_query
    await query.answer()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ callback_data (—Ñ–æ—Ä–º–∞—Ç: "page_2")
    page_number = int(query.data.split('_')[1])
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    bookings = context.user_data.get('current_bookings', [])
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    context.user_data['current_page'] = page_number
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    message_text = f"üìã <b>–ë—Ä–æ–Ω–∏ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</b>\n\n–ù–∞–π–¥–µ–Ω–æ –±—Ä–æ–Ω–µ–π: {len(bookings)}"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
    await query.edit_message_text(
        message_text,
        reply_markup=get_bookings_list_keyboard(bookings, page_number),
        parse_mode='HTML'
    )

async def refresh_bookings(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–µ–π (–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑ API)
    """
    query = update.callback_query
    await query.answer("üîÑ –û–±–Ω–æ–≤–ª—è—é...")  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
    await show_pending_bookings_from_query(query, context)

async def show_pending_bookings_from_query(query, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ –±—Ä–æ–Ω–µ–π –∏–∑ callback query
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏–π —Å –±—Ä–æ–Ω—å—é
    """
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–µ–π
    bookings = await booking_service.get_pending_bookings()
    
    if not bookings:
        # –ï—Å–ª–∏ –Ω–µ—Ç –±—Ä–æ–Ω–µ–π - —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
        await query.edit_message_text(
            "‚úÖ –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –±—Ä–æ–Ω–µ–π, –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –±—Ä–æ–Ω–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    context.user_data['current_bookings'] = bookings
    context.user_data['current_page'] = 0
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    message_text = f"üìã <b>–ë—Ä–æ–Ω–∏ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</b>\n\n–ù–∞–π–¥–µ–Ω–æ –±—Ä–æ–Ω–µ–π: {len(bookings)}"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await query.edit_message_text(
        message_text,
        reply_markup=get_bookings_list_keyboard(bookings, 0),
        parse_mode='HTML'
    )

async def cancel_rejection(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –û—Ç–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –±—Ä–æ–Ω–∏
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ fallback –≤ ConversationHandler
    """
    # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    context.user_data.pop('rejecting_booking_id', None)
    
    await update.message.reply_text(
        "‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –±—Ä–æ–Ω–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=get_back_to_menu_keyboard()
    )
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º Conversation
    return ConversationHandler.END
