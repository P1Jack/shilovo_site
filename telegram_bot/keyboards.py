from telegram import (
    ReplyKeyboardMarkup, 
    InlineKeyboardMarkup, 
    InlineKeyboardButton,
    KeyboardButton
)
from typing import List
from models.plot import Plot
from models.booking import Booking
from config import config

def get_main_menu_keyboard() -> ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è"""
    keyboard_layout = [
        ['üèû –ö–∞—Ç–∞–ª–æ–≥ —É—á–∞—Å—Ç–∫–æ–≤'],
        ['üìã –ú–æ–∏ –±—Ä–æ–Ω–∏', 'üÜò –ü–æ–º–æ—â—å'],
        ['üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã']
    ]
    
    return ReplyKeyboardMarkup(
        keyboard_layout,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ..."
    )

def get_plots_keyboard(plots: List[Plot], page: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —É—á–∞—Å—Ç–∫–æ–≤"""
    buttons = []
    
    start_idx = page * config.PAGE_SIZE
    end_idx = start_idx + config.PAGE_SIZE
    current_page_plots = plots[start_idx:end_idx]
    
    for plot in current_page_plots:
        button_text = f"üèû {plot.title} - {plot.price:,} —Ä—É–±."
        if len(button_text) > 50:
            button_text = button_text[:47] + "..."
            
        buttons.append([
            InlineKeyboardButton(button_text, callback_data=f"plot_{plot.id}")
        ])
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    navigation_buttons = []
    if page > 0:
        navigation_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"plots_page_{page-1}"))
    
    if end_idx < len(plots):
        navigation_buttons.append(InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"plots_page_{page+1}"))
    
    if navigation_buttons:
        buttons.append(navigation_buttons)
    
    buttons.append([InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="refresh_plots")])
    
    return InlineKeyboardMarkup(buttons)

def get_plot_detail_keyboard(plot_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π —É—á–∞—Å—Ç–∫–∞"""
    return InlineKeyboardMarkup([
        [
            InlineKeyboardButton("üìÖ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"book_{plot_id}"),
            InlineKeyboardButton("‚≠ê –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data=f"fav_{plot_id}")
        ],
        [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–∞–ª–æ–≥—É", callback_data="back_to_catalog")]
    ])

def get_bookings_keyboard(bookings: List[Booking], page: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –±—Ä–æ–Ω–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    buttons = []
    
    start_idx = page * config.PAGE_SIZE
    end_idx = start_idx + config.PAGE_SIZE
    current_page_bookings = bookings[start_idx:end_idx]
    
    for booking in current_page_bookings:
        status_emoji = booking.get_status_emoji()
        button_text = f"{status_emoji} –ë—Ä–æ–Ω—å #{booking.id} - {booking.plot_title}"
        if len(button_text) > 50:
            button_text = button_text[:47] + "..."
            
        buttons.append([
            InlineKeyboardButton(button_text, callback_data=f"booking_{booking.id}")
        ])
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    navigation_buttons = []
    if page > 0:
        navigation_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"bookings_page_{page-1}"))
    
    if end_idx < len(bookings):
        navigation_buttons.append(InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"bookings_page_{page+1}"))
    
    if navigation_buttons:
        buttons.append(navigation_buttons)
    
    buttons.append([InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="refresh_bookings")])
    
    return InlineKeyboardMarkup(buttons)

def get_booking_detail_keyboard(booking_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –±—Ä–æ–Ω–∏"""
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üö´ –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å", callback_data=f"cancel_booking_{booking_id}")],
        [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data="back_to_bookings")]
    ])

def get_confirmation_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
    return InlineKeyboardMarkup([
        [
            InlineKeyboardButton("‚úÖ –î–∞", callback_data="confirm_yes"),
            InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="confirm_no")
        ]
    ])

def get_contact_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞"""
    return ReplyKeyboardMarkup([
        [KeyboardButton("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True)],
        ['‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞']
    ], resize_keyboard=True)

def get_back_to_menu_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é"""
    return ReplyKeyboardMarkup([['‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard=True)
